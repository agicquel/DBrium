<project default="all">
    <property name="build.dir" value="build/main"/>
    <property name="src.dir" value="src/main"/>
    <property name="res.dir" value="res/"/>
    <property name="test.build.dir" value="build/test"/>
    <property name="test.src.dir" value="src/test/"/>
    <property name="junit.report.dir" value="junit-report/"/>
    <property name="doc.dir" value="doc/"/>
    <property name="jar.dir" value="build/jar"/>

    <path id="classpath">
        <fileset dir="lib/">
            <include name="*.jar"/>
        </fileset>

        <pathelement path="${build.dir}"/>
        <pathelement path="${test.build.dir}"/>
    </path>

    <target name="all" depends="clean, build, jar, run"/>
    
    <target name="clean"> 
        <delete dir="${build.dir}"/> 
        <delete dir="${test.build.dir}"/> 
        <delete dir="${jar.dir}"/> 
        <delete dir="${doc.dir}"/> 
        <delete dir="${junit.report.dir}" />
    </target> 
    
    <target name="build"> 
        <mkdir dir="${build.dir}" />

        <javac includeantruntime="false" srcdir="${src.dir}" destdir="${build.dir}" failonerror="true">
            <classpath refid="classpath" />
        </javac>
        <echo message = "build successfully" />
    </target>

    <target name="test-build"> 
        <mkdir dir="${test.build.dir}" /> 
        <javac includeantruntime="false" srcdir="${test.src.dir}" destdir="${test.build.dir}" failonerror="true">
            <classpath refid="classpath"/>
        </javac>
        <echo message = "test build successfully" />
    </target>

    <target name="test" depends="clean, build, test-build">

        <mkdir dir="${test.build.dir}" />
        <mkdir dir="${junit.report.dir}" />
        
        <junit printsummary="on" haltonfailure="yes" fork="true">

            <classpath refid="classpath"/>

             <batchtest todir="${junit.report.dir}">
                <formatter type="xml" usefile="true" />
                <fileset dir="${test.src.dir}">
                    <include name="*Test*.java" />
                </fileset>
            </batchtest>

            <formatter type="brief" usefile="false" />
        </junit>

        <mkdir dir="${junit.report.dir}/junit-report"/>
        <junitreport todir="${junit.report.dir}/junit-report">
            <fileset dir="${junit.report.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.report.dir}/junit-report"/>
        </junitreport>


    </target>
    
    <target name="javadoc">
        <mkdir dir="${doc.dir}"/>

        <javadoc packagenames="*" sourcepath="${src.dir}" destdir ="${doc.dir}" version = "true" windowtitle = "DBrium Documentation">
            <doctitle><![CDATA[= DBrium Documentation =]]></doctitle>
       </javadoc>
       
       <echo message = "javadoc has been generated successfully" />
    </target> 
    
    <target name="jar" depends="clean, build"> 
        <mkdir dir="${jar.dir}"/>

        <jar destfile="${jar.dir}/DBriumLauncher.jar" basedir="${build.dir}"> 
            <manifest> 
                <attribute name="Main-Class" value="DBriumLauncher"/> 
            </manifest>
            <zipgroupfileset dir="lib/" includes="*.jar"/> 
            <zipfileset dir="${res.dir}" prefix="${res.dir}"/>
        </jar> 
    </target> 
    
    <target name="run"> 
        <java jar="${jar.dir}/DBriumLauncher.jar" fork="true">
            <classpath refid="classpath"/>
        </java>
    </target>

</project>